class ClassWSClient{constructor(_host,_opts){this.name="ClassWSClient",this.wsc=void 0,this.opts=_opts,this.ChangeHost(_host)}ChangeHost(_host){let WebSocket=require("ws");"undefined"!=this.wsc&&this.CloseConnection(),this.wsc=new WebSocket(_host,this.opts),this.wsc.on("open",(function(){console.log("Connected to server")}))}CloseConnection(){this.wsc.on("close",(function(){console.log("Connection closed")}))}ChangeOptions(_opts){this.opts=_opts}InvCallback(_cb){let res;switch(_cb){case"open":this.wsc.on("open",(function(){res="Connected to server"}));break;case"message":this.wsc.on("message",(function(msg){res="MSG: "+msg}));break;case"close":this.wsc.on("close",(function(){res="Connection closed"}));break;case"handshake":this.wsc.on("handshake",(function(){res="Handshake success!"}));break;case"ping":this.wsc.on("ping",(function(){res="Got a ping!"}));break;case"pong":this.wsc.on("pong",(function(){res="Got a pong!"}));break;case"rawData":this.wsc.on("rawData",(function(msg){res="Raw Data: "+msg}));break;default:res="Unknown command!"}return res}SendMessage(_msg){return this.wsc.send(_msg),"Message sent!"}}exports=ClassWSClient;