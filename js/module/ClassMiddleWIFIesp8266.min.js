class ClassEsp8266{constructor(_Bus){this.name="ClassEsp8266",this.wifi=void 0,this.ecode=12,this.Init(_Bus)}Init(_Bus){let req="https://raw.githubusercontent.com/AlexGlgr/ModuleMiddleWIFIesp8266/fork-Alexander/js/module/ClassBaseWIFIesp8266.min.js";this.wifi=require(req).setup(_Bus,(function(emsg){if(emsg)throw new err(emsg,this.ecode)}))}Connect(_ssid,_pass){this.wifi.connect(_ssid,_pass,(function(emsg){if(emsg)throw new err(emsg,this.ecode)}))}HttpRequest(_opts,_body){let ret_data,req=require("http").request(options,(function(res){res.on("data",(function(data){ret_data+=data})),res.on("close",(function(){ret_data+="\nConnection closed\n"}))}));return _body&&"POST"==_opts.method&&(req.write(_body),ret_data+="\nPOST complete\n"),req.end(),ret_data}GetIP(){let _ip;return this.wifi.getIP((function(emsg,ipAdress){if(emsg)throw new err(emsg,this.ecode);_ip=ipAdress})),_ip}GetAPs(){let _aps;return this.wifi.getAPs((function(emsg,aps){if(emsg)throw new err(emsg,this.ecode);_aps=aps})),_aps}GetVersion(){let _ver;return this.wifi.getVersion((function(emsg,version){if(emsg)throw new err(emsg,this.ecode);_ver=version})),_ver}CreateAP(_ssid,_pass,_chan,_enc){let _res="AP created";return this.wifi.createAP(_ssid,_pass,_chan,_enc,(function(emsg){if(emsg)throw new err(emsg,this.ecode)})),_res}GetConnectedDevices(){let _devs;return this.wifi.getConnectedDevices((function(emsg,devices){if(emsg)throw new err(emsg,this.ecode);_devs=devices})),_devs}}exports=ClassEsp8266;